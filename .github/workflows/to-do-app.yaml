name: TO DO App Deployment CI

on:
  pull_request:
    branches:
      - master

jobs:
  Code-Quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        working-directory: ./src/backend
        run: npm install

      - name: Run code coverage
        working-directory: ./src/backend
        id: code-coverage
        run: npm test -- --coverage

      - name: Upload code coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-results
          path: ./src/backend/coverage/lcov.info

  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        working-directory: ./src/backend
        run: |
          npm install
          npm install --save-dev jest

      - name: Run Unit Tests
        working-directory: ./src/backend
        run: npm test -- --coverage

  scan-with-gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PRODUCT_TOKEN }}

  Build-scan-and-Push-FrontEnd-Image:
    runs-on: ubuntu-latest
    needs: scan-with-gitleaks
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/frontend
          file: ./src/frontend/Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/to-do-front-service:${{ github.run_id }}
          load: true

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/to-do-front-service:${{ github.run_id }}
          format: 'table'
          exit-code: 0
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: ./src/frontend
          file: ./src/frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/to-do-front-service:${{ github.run_id }}

  Build-scan-and-Push-BackEnd-Image:
    runs-on: ubuntu-latest
    needs: scan-with-gitleaks
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/to-do-back-service:${{ github.run_id }}
          load: true

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/to-do-back-service:${{ github.run_id }}
          format: 'table'
          exit-code: 0
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/to-do-back-service:${{ github.run_id }}

  Update-Github-Deployment:
    runs-on: ubuntu-latest
    needs: [ Build-scan-and-Push-BackEnd-Image, Build-scan-and-Push-FrontEnd-Image ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update K8S deployment file
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/to-do-back-service:${{ github.run_id }}|" K8S/Backend/deployment.yaml
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/to-do-front-service:${{ github.run_id }}|" K8S/Frontend/deployment.yaml

      - name: Commit changes
        run: |
          git config --global user.email "mahmoudsoliman427@gmail.com"
          git config --global user.name "mahmoudsoli"
          git add K8S/Backend/deployment.yaml K8S/Frontend/deployment.yaml
          git commit -m "[CI] Update deployment image"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mahmoudsoli/TODO-App.git HEAD:master -f
